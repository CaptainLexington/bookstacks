["^ ","~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$re-com.util","~:imports",null,"~:requires",["^ ","~$clojure.set","^7","~$goog.date.DateTime","^8","~$goog.date.UtcDateTime","^9"],"~:uses",["^ ","~$superset?","^7"],"~:defs",["^ ","~$sum-scroll-offsets",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","/home/captain/Development/bookstacks/resources/public/js/compiled/out/re_com/util.cljs","~:line",106,"~:column",7,"~:end-line",106,"~:end-column",25,"~:arglists",["~#list",["~$quote",["^F",[["~$node"]]]]],"~:doc","Given a DOM node, I traverse through all ascendant nodes (until I reach body), summing any scrollLeft and scrollTop values\n   and return these sums in a map"],"^3","~$re-com.util/sum-scroll-offsets","~:variadic",false,"^@","resources/public/js/compiled/out/re_com/util.cljs","^D",25,"~:method-params",["^F",[["^H"]]],"~:protocol-impl",null,"~:arglists-meta",["^F",[null,null]],"^B",1,"^A",106,"^C",106,"~:max-fixed-arity",1,"~:fn-var",true,"^E",["^F",["^G",["^F",[["^H"]]]]],"^I","Given a DOM node, I traverse through all ascendant nodes (until I reach body), summing any scrollLeft and scrollTop values\n   and return these sums in a map"],"~$position-for-id",["^ ","^>",null,"^?",["^ ","^@","/home/captain/Development/bookstacks/resources/public/js/compiled/out/re_com/util.cljs","^A",72,"^B",7,"^C",72,"^D",22,"^E",["^F",["^G",["^F",[["~$id","~$v","~$&",["^ ","~:keys",["~$id-fn"],"~:or",["^ ","^T","~:id"]]]]]]],"^I","Takes a vector of maps 'v'. Returns the position of the first item in 'v' whose id-fn (default :id) matches 'id'.\n   Returns nil if id not found","~:top-fn",["^ ","^K",true,"^O",2,"^L",[["^F",["^R","~$v",["^ ","^S",["^T"],"^U",["^ ","^T","^V"]]]]],"^E",["^F",[["^R","~$v","~$&",["^ ","^S",["^T"],"^U",["^ ","^T","^V"]]]]],"^N",["^F",[null]]]],"^3","~$re-com.util/position-for-id","^K",true,"^@","resources/public/js/compiled/out/re_com/util.cljs","^D",22,"^W",["^ ","^K",true,"^O",2,"^L",[["^F",["^R","~$v",["^ ","^S",["^T"],"^U",["^ ","^T","^V"]]]]],"^E",["^F",[["^R","~$v","~$&",["^ ","^S",["^T"],"^U",["^ ","^T","^V"]]]]],"^N",["^F",[null]]],"^L",[["^F",["^R","~$v",["^ ","^S",["^T"],"^U",["^ ","^T","^V"]]]]],"^M",null,"^N",["^F",[null]],"^B",1,"^A",72,"^C",72,"^O",2,"^P",true,"^E",["^F",[["^R","~$v","~$&",["^ ","^S",["^T"],"^U",["^ ","^T","^V"]]]]],"^I","Takes a vector of maps 'v'. Returns the position of the first item in 'v' whose id-fn (default :id) matches 'id'.\n   Returns nil if id not found"],"~$enumerate",["^ ","^>",null,"^?",["^ ","^@","/home/captain/Development/bookstacks/resources/public/js/compiled/out/re_com/util.cljs","^A",99,"^B",7,"^C",99,"^D",16,"^E",["^F",["^G",["^F",[["~$coll"]]]]],"^I","(for [[index item first? last?] (enumerate coll)] ...)  "],"^3","~$re-com.util/enumerate","^K",false,"^@","resources/public/js/compiled/out/re_com/util.cljs","^D",16,"^L",["^F",[["^Z"]]],"^M",null,"^N",["^F",[null,null]],"^B",1,"^A",99,"^C",99,"^O",1,"^P",true,"^E",["^F",["^G",["^F",[["^Z"]]]]],"^I","(for [[index item first? last?] (enumerate coll)] ...)  "],"~$remove-id-item",["^ ","^>",null,"^?",["^ ","^@","/home/captain/Development/bookstacks/resources/public/js/compiled/out/re_com/util.cljs","^A",88,"^B",7,"^C",88,"^D",21,"^E",["^F",["^G",["^F",[["^R","~$v","~$&",["^ ","^S",["^T"],"^U",["^ ","^T","^V"]]]]]]],"^I","Takes a vector of maps 'v', each of which has an id-fn (default :id) key.\n  Return v where item matching 'id' is excluded","^W",["^ ","^K",true,"^O",2,"^L",[["^F",["^R","~$v",["^ ","^S",["^T"],"^U",["^ ","^T","^V"]]]]],"^E",["^F",[["^R","~$v","~$&",["^ ","^S",["^T"],"^U",["^ ","^T","^V"]]]]],"^N",["^F",[null]]]],"^3","~$re-com.util/remove-id-item","^K",true,"^@","resources/public/js/compiled/out/re_com/util.cljs","^D",21,"^W",["^ ","^K",true,"^O",2,"^L",[["^F",["^R","~$v",["^ ","^S",["^T"],"^U",["^ ","^T","^V"]]]]],"^E",["^F",[["^R","~$v","~$&",["^ ","^S",["^T"],"^U",["^ ","^T","^V"]]]]],"^N",["^F",[null]]],"^L",[["^F",["^R","~$v",["^ ","^S",["^T"],"^U",["^ ","^T","^V"]]]]],"^M",null,"^N",["^F",[null]],"^B",1,"^A",88,"^C",88,"^O",2,"^P",true,"^E",["^F",[["^R","~$v","~$&",["^ ","^S",["^T"],"^U",["^ ","^T","^V"]]]]],"^I","Takes a vector of maps 'v', each of which has an id-fn (default :id) key.\n  Return v where item matching 'id' is excluded"],"~$remove-nth",["^ ","^>",null,"^?",["^ ","^@","/home/captain/Development/bookstacks/resources/public/js/compiled/out/re_com/util.cljs","^A",55,"^B",7,"^C",55,"^D",17,"^E",["^F",["^G",["^F",[["~$v","~$n"]]]]],"^I","Removes the item at position n from a vector v, returning a shrunk vector"],"^3","~$re-com.util/remove-nth","^K",false,"^@","resources/public/js/compiled/out/re_com/util.cljs","^D",17,"^L",["^F",[["~$v","~$n"]]],"^M",null,"^N",["^F",[null,null]],"^B",1,"^A",55,"^C",55,"^O",2,"^P",true,"^E",["^F",["^G",["^F",[["~$v","~$n"]]]]],"^I","Removes the item at position n from a vector v, returning a shrunk vector"],"~$deref-or-value",["^ ","^>",null,"^?",["^ ","^@","/home/captain/Development/bookstacks/resources/public/js/compiled/out/re_com/util.cljs","^A",21,"^B",7,"^C",21,"^D",21,"^E",["^F",["^G",["^F",[["~$val-or-atom"]]]]]],"^3","~$re-com.util/deref-or-value","^K",false,"^@","resources/public/js/compiled/out/re_com/util.cljs","^D",21,"^L",["^F",[["^15"]]],"^M",null,"^N",["^F",[null,null]],"^B",1,"^A",21,"^C",21,"^O",1,"^P",true,"^E",["^F",["^G",["^F",[["^15"]]]]]],"~$insert-nth",["^ ","^>",null,"^?",["^ ","^@","/home/captain/Development/bookstacks/resources/public/js/compiled/out/re_com/util.cljs","^A",63,"^B",7,"^C",63,"^D",17,"^E",["^F",["^G",["^F",[["~$vect","~$index","~$item"]]]]]],"^3","~$re-com.util/insert-nth","^K",false,"^@","resources/public/js/compiled/out/re_com/util.cljs","^D",17,"^L",["^F",[["^18","^19","^1:"]]],"^M",null,"^N",["^F",[null,null]],"^B",1,"^A",63,"^C",63,"^O",3,"^P",true,"^E",["^F",["^G",["^F",[["^18","^19","^1:"]]]]]],"~$now->utc",["^ ","^>",null,"^?",["^ ","^@","/home/captain/Development/bookstacks/resources/public/js/compiled/out/re_com/util.cljs","^A",124,"^B",7,"^C",124,"^D",15,"^E",["^F",["^G",["^F",[[]]]]],"^I","Answer a goog.date.UtcDateTime based on local date/time."],"^3","~$re-com.util/now->utc","^K",false,"^@","resources/public/js/compiled/out/re_com/util.cljs","^D",15,"^L",["^F",[[]]],"^M",null,"^N",["^F",[null,null]],"^B",1,"^A",124,"^C",124,"^O",0,"^P",true,"^E",["^F",["^G",["^F",[[]]]]],"^I","Answer a goog.date.UtcDateTime based on local date/time."],"~$deep-merge",["^ ","^>",null,"^?",["^ ","^@","/home/captain/Development/bookstacks/resources/public/js/compiled/out/re_com/util.cljs","^A",13,"^B",7,"^C",13,"^D",17,"^E",["^F",["^G",["^F",[["~$&","~$vals"]]]]],"^I","Recursively merges maps. If vals are not maps, the last value wins.","^W",["^ ","^K",true,"^O",0,"^L",[["^F",["^1?"]]],"^E",["^F",[["~$&","^1?"]]],"^N",["^F",[null]]]],"^3","~$re-com.util/deep-merge","^K",true,"^@","resources/public/js/compiled/out/re_com/util.cljs","^D",17,"^W",["^ ","^K",true,"^O",0,"^L",[["^F",["^1?"]]],"^E",["^F",[["~$&","^1?"]]],"^N",["^F",[null]]],"^L",[["^F",["^1?"]]],"^M",null,"^N",["^F",[null]],"^B",1,"^A",13,"^C",13,"^O",0,"^P",true,"^E",["^F",[["~$&","^1?"]]],"^I","Recursively merges maps. If vals are not maps, the last value wins."],"~$pad-zero",["^ ","^>",null,"^?",["^ ","^@","/home/captain/Development/bookstacks/resources/public/js/compiled/out/re_com/util.cljs","^A",31,"^B",7,"^C",31,"^D",15,"^E",["^F",["^G",["^F",[["~$s","~$len"]]]]],"^I","Left pad a string 's' with '0', until 's' has length 'len'. Return 's' unchanged, if it is already len or greater"],"^3","~$re-com.util/pad-zero","^K",false,"^@","resources/public/js/compiled/out/re_com/util.cljs","^D",15,"^L",["^F",[["~$s","^1B"]]],"^M",null,"^N",["^F",[null,null]],"^B",1,"^A",31,"^C",31,"^O",2,"^P",true,"^E",["^F",["^G",["^F",[["~$s","^1B"]]]]],"^I","Left pad a string 's' with '0', until 's' has length 'len'. Return 's' unchanged, if it is already len or greater"],"~$get-element-by-id",["^ ","^>",null,"^?",["^ ","^@","/home/captain/Development/bookstacks/resources/public/js/compiled/out/re_com/util.cljs","^A",26,"^B",7,"^C",26,"^D",24,"^E",["^F",["^G",["^F",[["^R"]]]]]],"^3","~$re-com.util/get-element-by-id","^K",false,"^@","resources/public/js/compiled/out/re_com/util.cljs","^D",24,"^L",["^F",[["^R"]]],"^M",null,"^N",["^F",[null,null]],"^B",1,"^A",26,"^C",26,"^O",1,"^P",true,"^E",["^F",["^G",["^F",[["^R"]]]]]],"~$px",["^ ","^>",null,"^?",["^ ","^@","/home/captain/Development/bookstacks/resources/public/js/compiled/out/re_com/util.cljs","^A",45,"^B",7,"^C",45,"^D",9,"^E",["^F",["^G",["^F",[["~$val","~$&","~$negative"]]]]],"^I","takes a number (and optional :negative keyword to indicate a negative value) and returns that number as a string with 'px' at the end","^W",["^ ","^K",true,"^O",1,"^L",[["^F",["^1G","^1H"]]],"^E",["^F",[["^1G","~$&","^1H"]]],"^N",["^F",[null]]]],"^3","~$re-com.util/px","^K",true,"^@","resources/public/js/compiled/out/re_com/util.cljs","^D",9,"^W",["^ ","^K",true,"^O",1,"^L",[["^F",["^1G","^1H"]]],"^E",["^F",[["^1G","~$&","^1H"]]],"^N",["^F",[null]]],"^L",[["^F",["^1G","^1H"]]],"^M",null,"^N",["^F",[null]],"^B",1,"^A",45,"^C",45,"^O",1,"^P",true,"^E",["^F",[["^1G","~$&","^1H"]]],"^I","takes a number (and optional :negative keyword to indicate a negative value) and returns that number as a string with 'px' at the end"],"~$item-for-id",["^ ","^>",null,"^?",["^ ","^@","/home/captain/Development/bookstacks/resources/public/js/compiled/out/re_com/util.cljs","^A",81,"^B",7,"^C",81,"^D",18,"^E",["^F",["^G",["^F",[["^R","~$v","~$&",["^ ","^S",["^T"],"^U",["^ ","^T","^V"]]]]]]],"^I","Takes a vector of maps 'v'. Returns the first item in 'v' whose id-fn (default :id) matches 'id'.\n   Returns nil if id not found","^W",["^ ","^K",true,"^O",2,"^L",[["^F",["^R","~$v",["^ ","^S",["^T"],"^U",["^ ","^T","^V"]]]]],"^E",["^F",[["^R","~$v","~$&",["^ ","^S",["^T"],"^U",["^ ","^T","^V"]]]]],"^N",["^F",[null]]]],"^3","~$re-com.util/item-for-id","^K",true,"^@","resources/public/js/compiled/out/re_com/util.cljs","^D",18,"^W",["^ ","^K",true,"^O",2,"^L",[["^F",["^R","~$v",["^ ","^S",["^T"],"^U",["^ ","^T","^V"]]]]],"^E",["^F",[["^R","~$v","~$&",["^ ","^S",["^T"],"^U",["^ ","^T","^V"]]]]],"^N",["^F",[null]]],"^L",[["^F",["^R","~$v",["^ ","^S",["^T"],"^U",["^ ","^T","^V"]]]]],"^M",null,"^N",["^F",[null]],"^B",1,"^A",81,"^C",81,"^O",2,"^P",true,"^E",["^F",[["^R","~$v","~$&",["^ ","^S",["^T"],"^U",["^ ","^T","^V"]]]]],"^I","Takes a vector of maps 'v'. Returns the first item in 'v' whose id-fn (default :id) matches 'id'.\n   Returns nil if id not found"],"~$fmap",["^ ","^>",null,"^?",["^ ","^@","/home/captain/Development/bookstacks/resources/public/js/compiled/out/re_com/util.cljs","^A",7,"^B",7,"^C",7,"^D",11,"^E",["^F",["^G",["^F",[["~$f","~$m"]]]]],"^I","Takes a function 'f' amd a map 'm'.  Applies 'f' to each value in 'm' and returns.\n   (fmap  inc  {:a 4  :b 2})   =>   {:a 5  :b 3}"],"^3","~$re-com.util/fmap","^K",false,"^@","resources/public/js/compiled/out/re_com/util.cljs","^D",11,"^L",["^F",[["~$f","~$m"]]],"^M",null,"^N",["^F",[null,null]],"^B",1,"^A",7,"^C",7,"^O",2,"^P",true,"^E",["^F",["^G",["^F",[["~$f","~$m"]]]]],"^I","Takes a function 'f' amd a map 'm'.  Applies 'f' to each value in 'm' and returns.\n   (fmap  inc  {:a 4  :b 2})   =>   {:a 5  :b 3}"],"~$pad-zero-number",["^ ","^>",null,"^?",["^ ","^@","/home/captain/Development/bookstacks/resources/public/js/compiled/out/re_com/util.cljs","^A",39,"^B",7,"^C",39,"^D",22,"^E",["^F",["^G",["^F",[["~$num","^1B"]]]]],"^I","return 'num' as a string of 'len' characters, left padding with '0' as necessary"],"^3","~$re-com.util/pad-zero-number","^K",false,"^@","resources/public/js/compiled/out/re_com/util.cljs","^D",22,"^L",["^F",[["^1O","^1B"]]],"^M",null,"^N",["^F",[null,null]],"^B",1,"^A",39,"^C",39,"^O",2,"^P",true,"^E",["^F",["^G",["^F",[["^1O","^1B"]]]]],"^I","return 'num' as a string of 'len' characters, left padding with '0' as necessary"]],"~:require-macros",null,"~:cljs.analyzer/constants",["^ ","~:seen",["^2",["~:top","~:id-fn","^V","~:left"]],"~:order",["^1U","^V","^1V","^1T"]],"^I",null]