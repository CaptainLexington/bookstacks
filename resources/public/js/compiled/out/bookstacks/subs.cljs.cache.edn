{:use-macros {reaction reagent.ratom}, :excludes #{}, :name bookstacks.subs, :imports nil, :requires {re-frame re-frame.core, re-frame.core re-frame.core, string clojure.string, clojure.string clojure.string, set clojure.set, clojure.set clojure.set}, :uses nil, :defs {filter-stacks {:protocol-inline nil, :meta {:file "/home/captain/Development/bookstacks/src/cljs/bookstacks/subs.cljs", :line 17, :column 7, :end-line 17, :end-column 20, :arglists (quote ([stacks query current-stack]))}, :name bookstacks.subs/filter-stacks, :variadic false, :file "/home/captain/Development/bookstacks/src/cljs/bookstacks/subs.cljs", :end-column 20, :method-params ([stacks query current-stack]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 17, :end-line 17, :max-fixed-arity 3, :fn-var true, :arglists (quote ([stacks query current-stack]))}, get-stack {:protocol-inline nil, :meta {:file "/home/captain/Development/bookstacks/src/cljs/bookstacks/subs.cljs", :line 34, :column 7, :end-line 34, :end-column 16, :arglists (quote ([books stack]))}, :name bookstacks.subs/get-stack, :variadic false, :file "/home/captain/Development/bookstacks/src/cljs/bookstacks/subs.cljs", :end-column 16, :method-params ([books stack]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 34, :end-line 34, :max-fixed-arity 2, :fn-var true, :arglists (quote ([books stack]))}}, :require-macros {reagent.ratom reagent.ratom}, :cljs.analyzer/constants {:seen #{:books :search-term :name :current-stack :active-panel :stack :stacks}, :order [:name :books :stacks :search-term :current-stack :stack :active-panel]}, :doc nil}